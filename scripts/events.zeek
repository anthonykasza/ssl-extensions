module SSL::EXTENSIONS;

export {
  global ssl_extension_TLMSP: event(c: connection, is_client: bool, result: any);
  global ssl_extension_TLMSP_delegate: event(c: connection, is_client: bool, result: any);
  global ssl_extension_TLMSP_proxying: event(c: connection, is_client: bool, result: any);
  global ssl_extension_application_layer_protocol_negotiation: event(c: connection, is_client: bool, result: any);
  global ssl_extension_cached_info: event(c: connection, is_client: bool, result: any);
  global ssl_extension_cert_type: event(c: connection, is_client: bool, result: any);
  global ssl_extension_certificate_authorities: event(c: connection, is_client: bool, result: any);
  global ssl_extension_client_authz: event(c: connection, is_client: bool, result: any);
  global ssl_extension_client_certificate_type: event(c: connection, is_client: bool, result: any);
  global ssl_extension_client_certificate_url: event(c: connection, is_client: bool, result: any);
  global ssl_extension_compress_certificate: event(c: connection, is_client: bool, result: any);
  global ssl_extension_connection_id: event(c: connection, is_client: bool, result: any);
  global ssl_extension_connection_id_deprecated: event(c: connection, is_client: bool, result: any);
  global ssl_extension_cookie: event(c: connection, is_client: bool, result: any);
  global ssl_extension_delegated_credential: event(c: connection, is_client: bool, result: any);
  global ssl_extension_dnssec_chain: event(c: connection, is_client: bool, result: any);
  global ssl_extension_early_data: event(c: connection, is_client: bool, result: any);
  global ssl_extension_ec_point_formats: event(c: connection, is_client: bool, result: any);
  global ssl_extension_ech_outer_extensions: event(c: connection, is_client: bool, result: any);
  global ssl_extension_encrypt_then_mac: event(c: connection, is_client: bool, result: any);
  global ssl_extension_encrypted_client_hello: event(c: connection, is_client: bool, result: any);
  global ssl_extension_extended_master_secret: event(c: connection, is_client: bool, result: any);
  global ssl_extension_external_id_hash: event(c: connection, is_client: bool, result: any);
  global ssl_extension_external_session_id: event(c: connection, is_client: bool, result: any);
  global ssl_extension_grease: event(c: connection, is_client: bool, result: any);
  global ssl_extension_heartbeat: event(c: connection, is_client: bool, result: any);
  global ssl_extension_key_share: event(c: connection, is_client: bool, result: any);
  global ssl_extension_key_share_reserved: event(c: connection, is_client: bool, result: any);
  global ssl_extension_max_fragment_length: event(c: connection, is_client: bool, result: any);
  global ssl_extension_oid_filters: event(c: connection, is_client: bool, result: any);
  global ssl_extension_padding: event(c: connection, is_client: bool, result: any);
  global ssl_extension_password_salt: event(c: connection, is_client: bool, result: any);
  global ssl_extension_post_handshake_auth: event(c: connection, is_client: bool, result: any);
  global ssl_extension_pre_shared_key: event(c: connection, is_client: bool, result: any);
  global ssl_extension_psk_key_exchange_modes: event(c: connection, is_client: bool, result: any);
  global ssl_extension_pwd_clear: event(c: connection, is_client: bool, result: any);
  global ssl_extension_pwd_protect: event(c: connection, is_client: bool, result: any);
  global ssl_extension_quic_transport_parameters: event(c: connection, is_client: bool, result: any);
  global ssl_extension_record_size_limit: event(c: connection, is_client: bool, result: any);
  global ssl_extension_renegotiation_info: event(c: connection, is_client: bool, result: any);
  global ssl_extension_rrc: event(c: connection, is_client: bool, result: any);
  global ssl_extension_sequence_number_encryption_algorithms: event(c: connection, is_client: bool, result: any);
  global ssl_extension_server_authz: event(c: connection, is_client: bool, result: any);
  global ssl_extension_server_certificate_type: event(c: connection, is_client: bool, result: any);
  global ssl_extension_server_name: event(c: connection, is_client: bool, result: any);
  global ssl_extension_session_ticket: event(c: connection, is_client: bool, result: any);
  global ssl_extension_signature_algorithms: event(c: connection, is_client: bool, result: any);
  global ssl_extension_signature_algorithms_cert: event(c: connection, is_client: bool, result: any);
  global ssl_extension_signed_certificate_timestamp: event(c: connection, is_client: bool, result: any);
  global ssl_extension_srp: event(c: connection, is_client: bool, result: any);
  global ssl_extension_status_request: event(c: connection, is_client: bool, result: any);
  global ssl_extension_status_request_v2: event(c: connection, is_client: bool, result: any);
  global ssl_extension_supported_ekt_ciphers: event(c: connection, is_client: bool, result: any);
  global ssl_extension_supported_groups: event(c: connection, is_client: bool, result: any);
  global ssl_extension_supported_versions: event(c: connection, is_client: bool, result: any);
  global ssl_extension_ticket_pinning: event(c: connection, is_client: bool, result: any);
  global ssl_extension_ticket_request: event(c: connection, is_client: bool, result: any);
  global ssl_extension_tls_cert_with_extern_psk: event(c: connection, is_client: bool, result: any);
  global ssl_extension_tls_lts: event(c: connection, is_client: bool, result: any);
  global ssl_extension_token_binding: event(c: connection, is_client: bool, result: any);
  global ssl_extension_transparency_info: event(c: connection, is_client: bool, result: any);
  global ssl_extension_truncated_hmac: event(c: connection, is_client: bool, result: any);
  global ssl_extension_trusted_ca_keys: event(c: connection, is_client: bool, result: any);
  global ssl_extension_use_srtp: event(c: connection, is_client: bool, result: any);
  global ssl_extension_user_mapping: event(c: connection, is_client: bool, result: any);
}
